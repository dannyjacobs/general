from v1.0 of general:
====================

In my_DSP_modules.py,

(*) Moved functions XC() and spectax() from MOFF module to the DSP module.
Changed the module prefix in the concerned calling sequences accordingly.
(*) Added keyword boolean input 'shift' to perform a shift to the correlated
sequence to be compatible for equivalence with FFT based methods. Without shift,
the usual correlated sequence is returned.
(*) Added a function smooth() to smooth a sequence using a moving mean or median 
window
(*) Added a function filter() to create a low/high pass filtered data from the 
input using user supplied filter window specifications

In catalog.py,

(*) Added docstring to all classes and associated member functions
(*) Now input named catalog to the __init__() member function of class SkyModel
is verified to be an instance of class Catalog

In geometry.py,

(*) function altaz2dircos() was found to fail when a 2-element list was supplied
after converting from list to numpy array. Now it is forced to convert to a 
two-dimensional array even if only one list is provided.
(*) Moved the routine baseline_generator from geometry.py to interferometry.py

---------------------------------------------------------------------------------

from v1.2 of python-trials:
==========================

In geometry.py,

(*) Added docstring to class Point and its member functions
(*) Instance of Point class can now be initiated with a numpy array of
coordinates
(*) An instance can now be initialized using another instance of Point class
(*) Added operator overloading __abs__() to compute the magnitude of the vector
(*) Added overloaded comparison operators for <, <=, >, >=, and == to compare
the magnitudes of two vectors

In my_DSP_modules.py,

(*) Added a new function shaping() to return rectangular or Blackman-Nuttall 
windows. Read docstring for more details.
(*) Added new function downsampler() to downsample a given data set either
in intervals of integral multiples or non-integral intervals through 
interpolation.
(*) Added new function upsampler() to upsample a given data set through 
interpolation.

In my_gridding_modules.py,

(*) interpolate module in scipy is separately imported instead of a 
direct call using scipy.interpolate
(*) Modified conv_grid2d() to handle xc, yc, xkern, ykern, xgrid, ygrid,
and kernel not only as list inputs but also as numpy arrays
(*) Modified conv_grid1d() to handle xc, xkern, xgrid, ygrid, and kernel
not only as list inputs but also as numpy arrays
(*) Modified conv_grid1d() to perform complex interpolation depending on
input data type
(*) Modified conv_grid2d() to perform complex interpolation depending on
input data type
