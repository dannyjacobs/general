from v1.07 of general:
=====================

In my_DSP_modules.py,

(*) Added capability in functions shaping() and windowing() to accept values
'bhw' or 'BHW' in input shape and compute Blackman-Harris window. Changed 
docstrings accordingly.

---------------------------------------------------------------------------------
from v1.06 of general:
=====================

In my_DSP_modules.py,

(*) Added a new function fft_filter which can filter multi-dimensional input data
using the frequency domain representation of the input using frequency weights 
with passband options being 'low' or 'high'

In my_operations.py,

(*) added a customizable function to estimate root mean square value of an input
with multiple dimensions which can apply frequency domain filtering and/or 
mask before estimating standard deviation.
(*) in function reverse(), changed default of ind_range from [-1, 1] to None
because there seemed to be a bug where ind_range from previous call seemed to
copy over to the next call. Still needs to be udnerstood why this was happening.
Changing the default to None seems to eliminate this unexplained carryover.

In lookup_operations.py,

(*) Added a keyword maxNN to populate only the maxNN nearest neighbours with 
nearest neighbour values

---------------------------------------------------------------------------------
from v1.05 of general:
=====================

In geometry.py,

(*) Added further checks in hadec2altaz() to take into account machine precision
effects

Moved module lookup_operations.py from MOFF to general repository.

In lookup_operations.py,

(*) in function lookup(), distNN was not initialized when remove_oob is False.
Now it is initialized.

---------------------------------------------------------------------------------
from v1.04 of general:
=====================

In geometry.py,

(*) sphdist() now returns a flattened array as output
(*) Modified docstring in spherematch.py to indicate that the matches for the 
first catalog are searched for in the second catalog
(*) Modified docstring in spherematch.py to indicate the order of preference in
implementing keyword inputs nnearest and maxmatches
(*) In altaz2hadec(), added an important change that takes care of the sign 
conventions and distinguishes between azimuths that are on opposite sides
(*) In hadec2altaz(), modified to handle any NaN values arising out of machine
precision effects by adding a tolerance factor

In catalog.py,

(*) member function subset() of class Catalog now uses numpy.take() to select 
subset from indices instead of using fancy indexing. This will be faster when
size of indices is large.
(*) member function subset() of class Catalog modified to initialize a subset
catalog differently to reflect changes in Catalog attribute structure made in 
v1.04. 
(*) Modified the docstring of class Catalog to reflect the changes made in its
attribute structure in v1.04 which was forgotten to be made back then.

In my_DSP_modules.py,

(*) Added inverse FFT functionality to FT1D() through use of a boolean 'inverse'
keyword and changed docstring accordingly

---------------------------------------------------------------------------------
from v1.03 of general:
=====================

In catalog.py,

(*) Added a new attribute named 'name' to class Catalog that denotes the catalog 
to which the object belongs. The __init__() function inputs were modified
accordingly.
(*) Modified the attribute frequency of class Catalog to be a vector, one for
each object, thus giving the freedom to have a heterogeneous catalog with source
flux densities at different frequencies. Contents of the __init__() function were
modified accordingly
(*) Added error checking in __init__() member function of class Catalog
(*) Modified error checkign in __init__() member function of class Catalog to
retain src_shape as an optional input parameter

In my_operations.py,

(*) A new function named binned_statistic() has been added which is a wrapper for
the binned_statistic() function in scipy.stats but also can return the reverse
indices from the binning operation identical to the reverse indices oepration in
IDL's histogram.

In my_DSP_modules.py,

(*) New polyphase filter bank related functions, namely, PFB_FIR_coeff(), 
apply_PFB_filter(), PFB_shape(), sinewave(), and pfbshape() have been added.
These are untested and highly experimental. Documentation has to be provided.

---------------------------------------------------------------------------------
from v1.02 of general:
=====================

In geometry.py,

(*) Raising of few exceptions have been fixed.

In my_DSP_modules.py,

(*) In function windowing(), replaced the estimation of area using trapz() with
sum() even if the latter is less accurate in order to be more consistent with FFT
usage downstream.
(*) Added a function PFB_empirical() which empirically generates a polyphase
filter bank. 

In catalog.py, 

(*) Added a new attribute src_shape which is initialized by the newly included 
input parameter in the __init__() member function of class Catalog. The src_shape 
will consist of three elements, namely, major axis FWHM, minor axis FWHM, and 
position angle (degrees), for each source. The docstring has been modified
accordingly. 
(*) Added a new input parameter src_shape_units to member function __init__()
that specifies the units of the major and minor axes, and position angle. The
docstring has been modified accordingly.

---------------------------------------------------------------------------------
from v1.01 of general:
=====================

(*) Added a new module named foregrounds.py.
(*) Added a function power_law_spectral_index() which computes a single power law
spectral index when flux densities and corresponding frequencies are specified.

In my_DSP_modules.py,

(*) function shaping was modified to handle when the window shape is specified in
both lower and upper case letters
(*) Created a window shaping function windowing() which creates a window shape 
with optional padding, and centering capabilities. Differs from shaping() in that 
whole number of samples are specified instead of a fraction for padding.

In my_operations.py,

(*) In function reverse(), replaced the usage of sys.exit() with raise of
exceptions.

In catalog.py,

(*) In __init__() of class Catalog, force attributes flux_density and
spectral_index to a numpy vector of non-zero dimensions even if the input 
provides only a single object to be cataloged.

In geometry.py, 

(*) Modified altaz2dircos() so that it handles input altitudes which are negative
(*) Modified altaz2dircos() to check that altitudes lie in the range -90 to +90
degrees, earlier it was checking only the range 0 to 90 degrees.
(*) Rectified the return value in dircos2altaz() from being a 3-column array to a
2-column array. Changed documentation accordingly
(*) In dircos2altaz(), changed usage of numpy absolute() to numpy abs()

---------------------------------------------------------------------------------
from v1.0 of general:
====================

In my_DSP_modules.py,

(*) Moved functions XC() and spectax() from MOFF module to the DSP module.
Changed the module prefix in the concerned calling sequences accordingly.
(*) Added keyword boolean input 'shift' to perform a shift to the correlated
sequence to be compatible for equivalence with FFT based methods. Without shift,
the usual correlated sequence is returned.
(*) Added a function smooth() to smooth a sequence using a moving mean or median 
window
(*) Added a function filter() to create a low/high pass filtered data from the 
input using user supplied filter window specifications

In catalog.py,

(*) Added docstring to all classes and associated member functions
(*) Now input named catalog to the __init__() member function of class SkyModel
is verified to be an instance of class Catalog

In geometry.py,

(*) function altaz2dircos() was found to fail when a 2-element list was supplied
after converting from list to numpy array. Now it is forced to convert to a 
two-dimensional array even if only one list is provided.
(*) Moved the routine baseline_generator from geometry.py to interferometry.py

---------------------------------------------------------------------------------

from v1.2 of python-trials:
==========================

In geometry.py,

(*) Added docstring to class Point and its member functions
(*) Instance of Point class can now be initiated with a numpy array of
coordinates
(*) An instance can now be initialized using another instance of Point class
(*) Added operator overloading __abs__() to compute the magnitude of the vector
(*) Added overloaded comparison operators for <, <=, >, >=, and == to compare
the magnitudes of two vectors

In my_DSP_modules.py,

(*) Added a new function shaping() to return rectangular or Blackman-Nuttall 
windows. Read docstring for more details.
(*) Added new function downsampler() to downsample a given data set either
in intervals of integral multiples or non-integral intervals through 
interpolation.
(*) Added new function upsampler() to upsample a given data set through 
interpolation.

In my_gridding_modules.py,

(*) interpolate module in scipy is separately imported instead of a 
direct call using scipy.interpolate
(*) Modified conv_grid2d() to handle xc, yc, xkern, ykern, xgrid, ygrid,
and kernel not only as list inputs but also as numpy arrays
(*) Modified conv_grid1d() to handle xc, xkern, xgrid, ygrid, and kernel
not only as list inputs but also as numpy arrays
(*) Modified conv_grid1d() to perform complex interpolation depending on
input data type
(*) Modified conv_grid2d() to perform complex interpolation depending on
input data type
